/**
 * MSB Pay API
 * API specification for payment processing via the MySchoolBucks.com cart checkout. <br /> <a href=\"MSBPayAPI-v2-changelog.txt\">Changelog</a>
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MsbPayApi);
  }
}(this, function(expect, MsbPayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MsbPayApi.CartPayment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartPayment', function() {
    it('should create an instance of CartPayment', function() {
      // uncomment below and update the code to test CartPayment
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be.a(MsbPayApi.CartPayment);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property cartId (base name: "cartId")', function() {
      // uncomment below and update the code to test the property cartId
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property payerName (base name: "payerName")', function() {
      // uncomment below and update the code to test the property payerName
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property txnType (base name: "txnType")', function() {
      // uncomment below and update the code to test the property txnType
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "storeId")', function() {
      // uncomment below and update the code to test the property storeId
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodId (base name: "paymentMethodId")', function() {
      // uncomment below and update the code to test the property paymentMethodId
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property billingAcctDesc (base name: "billingAcctDesc")', function() {
      // uncomment below and update the code to test the property billingAcctDesc
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property salesTax (base name: "salesTax")', function() {
      // uncomment below and update the code to test the property salesTax
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property userTxnFee (base name: "userTxnFee")', function() {
      // uncomment below and update the code to test the property userTxnFee
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property clientTxnFee (base name: "clientTxnFee")', function() {
      // uncomment below and update the code to test the property clientTxnFee
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property confirmation (base name: "confirmation")', function() {
      // uncomment below and update the code to test the property confirmation
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property batchDate (base name: "batchDate")', function() {
      // uncomment below and update the code to test the property batchDate
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property batchNumber (base name: "batchNumber")', function() {
      // uncomment below and update the code to test the property batchNumber
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property depositAmount (base name: "depositAmount")', function() {
      // uncomment below and update the code to test the property depositAmount
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property settled (base name: "settled")', function() {
      // uncomment below and update the code to test the property settled
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property cartPaymentItems (base name: "cartPaymentItems")', function() {
      // uncomment below and update the code to test the property cartPaymentItems
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

    it('should have the property remainingRefundableAmount (base name: "remainingRefundableAmount")', function() {
      // uncomment below and update the code to test the property remainingRefundableAmount
      //var instane = new MsbPayApi.CartPayment();
      //expect(instance).to.be();
    });

  });

}));

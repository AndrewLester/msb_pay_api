/**
 * MSB Pay API
 * API specification for payment processing via the MySchoolBucks.com cart checkout. <br /> <a href=\"MSBPayAPI-v2-changelog.txt\">Changelog</a>
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MsbPayApi);
  }
}(this, function(expect, MsbPayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MsbPayApi.CartOrder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartOrder', function() {
    it('should create an instance of CartOrder', function() {
      // uncomment below and update the code to test CartOrder
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be.a(MsbPayApi.CartOrder);
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property recipientName (base name: "recipientName")', function() {
      // uncomment below and update the code to test the property recipientName
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property recipientEmail (base name: "recipientEmail")', function() {
      // uncomment below and update the code to test the property recipientEmail
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property billingAcctDesc (base name: "billingAcctDesc")', function() {
      // uncomment below and update the code to test the property billingAcctDesc
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "storeId")', function() {
      // uncomment below and update the code to test the property storeId
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodId (base name: "paymentMethodId")', function() {
      // uncomment below and update the code to test the property paymentMethodId
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

    it('should have the property cartOrderItems (base name: "cartOrderItems")', function() {
      // uncomment below and update the code to test the property cartOrderItems
      //var instane = new MsbPayApi.CartOrder();
      //expect(instance).to.be();
    });

  });

}));

/**
 * MSB Pay API
 * API specification for payment processing via the MySchoolBucks.com cart checkout. <br /> <a href=\"MSBPayAPI-v2-changelog.txt\">Changelog</a>
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse200 from '../model/InlineResponse200';
import MsbPayResponse from '../model/MsbPayResponse';

/**
* Utility service.
* @module api/UtilityApi
* @version v2
*/
export default class UtilityApi {

    /**
    * Constructs a new UtilityApi. 
    * @alias module:api/UtilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the rootGet operation.
     * @callback module:api/UtilityApi~rootGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MsbPayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * System details
     * Returns details of API version, server node, and application version.
     * @param {module:api/UtilityApi~rootGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MsbPayResponse}
     */
    rootGet(authorization, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MsbPayResponse;

      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the testExceptionsGet operation.
     * @callback module:api/UtilityApi~testExceptionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MsbPayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Developer tool to test responses from exceptions.
     * Returns details of developer key&#x27;s account holder and configuration.
     * @param {Object} opts Optional parameters
     * @param {module:api/UtilityApi~testExceptionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MsbPayResponse}
     */
    testExceptionsGet(authorization, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'NotAuthorizedException': opts['notAuthorizedException'],
        'ForbiddenException': opts['forbiddenException'],
        'NotFoundException': opts['notFoundException'],
        'NotAllowedException': opts['notAllowedException'],
        'NotAcceptableException': opts['notAcceptableException'],
        'NotSupportedException': opts['notSupportedException'],
        'ClientErrorException': opts['clientErrorException'],
        'InternalServerErrorException': opts['internalServerErrorException'],
        'ServiceUnavailableException': opts['serviceUnavailableException'],
        'ServerErrorException': opts['serverErrorException'],
        'WebApplicationException': opts['webApplicationException'],
        'RuntimeException': opts['runtimeException'],
        'BadRequestException': opts['badRequestException'],
        'NullPointerException': opts['nullPointerException']
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MsbPayResponse;

      return this.apiClient.callApi(
        '/testExceptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the whoAmIGet operation.
     * @callback module:api/UtilityApi~whoAmIGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Account details
     * Returns details of developer key&#x27;s account holder and configuration.
     * @param {module:api/UtilityApi~whoAmIGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    whoAmIGet(authorization, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/whoAmI', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

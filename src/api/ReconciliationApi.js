/**
 * MSB Pay API
 * API specification for payment processing via the MySchoolBucks.com cart checkout. <br /> <a href=\"MSBPayAPI-v2-changelog.txt\">Changelog</a>
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse2003 from '../model/InlineResponse2003';
import InlineResponse2006 from '../model/InlineResponse2006';
import PaymentType from '../model/PaymentType';

/**
* Reconciliation service.
* @module api/ReconciliationApi
* @version v2
*/
export default class ReconciliationApi {

    /**
    * Constructs a new ReconciliationApi. 
    * @alias module:api/ReconciliationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the clientsClientIdPaymentsGet operation.
     * @callback module:api/ReconciliationApi~clientsClientIdPaymentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2006} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get payments for client
     * Returns payments created by this developer key at indicated client
     * @param {Object} opts Optional parameters
     * @param {module:api/ReconciliationApi~clientsClientIdPaymentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2006}
     */
    clientsClientIdPaymentsGet(authorization, clientId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'clientId': clientId
      };
      let queryParams = {
        'cartId': opts['cartId'],
        'transferConfirmed': opts['transferConfirmed'],
        'paymentType': opts['paymentType'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'page': opts['page'],
        'rowCount': opts['rowCount']
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2006;

      return this.apiClient.callApi(
        '/clients/{clientId}/payments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the clientsClientIdPaymentsPaymentIdConfirmtransferPost operation.
     * @callback module:api/ReconciliationApi~clientsClientIdPaymentsPaymentIdConfirmtransferPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2003} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Confirm payment
     * Records payment as confirmed by the sales agent application. Used to acknowledge payment status.
     * @param {module:api/ReconciliationApi~clientsClientIdPaymentsPaymentIdConfirmtransferPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2003}
     */
    clientsClientIdPaymentsPaymentIdConfirmtransferPost(authorization, clientId, paymentId, callback) {
      let postBody = null;

      let pathParams = {
        'clientId': clientId,
        'paymentId': paymentId
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2003;

      return this.apiClient.callApi(
        '/clients/{clientId}/payments/{paymentId}/confirmtransfer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

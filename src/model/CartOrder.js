/**
 * MSB Pay API
 * API specification for payment processing via the MySchoolBucks.com cart checkout. <br /> <a href=\"MSBPayAPI-v2-changelog.txt\">Changelog</a>
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CartOrderItem from './CartOrderItem';
import OrderStatus from './OrderStatus';

/**
* The CartOrder model module.
* @module model/CartOrder
* @version v2
*/
export default class CartOrder {
    /**
    * Constructs a new <code>CartOrder</code>.
    * Orders for the supplied cart
    * @alias module:model/CartOrder
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CartOrder</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/CartOrder} obj Optional instance to populate.
    * @return {module:model/CartOrder} The populated <code>CartOrder</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CartOrder();
                        
            
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = OrderStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('recipientName')) {
                obj['recipientName'] = ApiClient.convertToType(data['recipientName'], 'String');
            }
            if (data.hasOwnProperty('recipientEmail')) {
                obj['recipientEmail'] = ApiClient.convertToType(data['recipientEmail'], 'String');
            }
            if (data.hasOwnProperty('billingAcctDesc')) {
                obj['billingAcctDesc'] = ApiClient.convertToType(data['billingAcctDesc'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], Object);
            }
            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'String');
            }
            if (data.hasOwnProperty('paymentMethodId')) {
                obj['paymentMethodId'] = ApiClient.convertToType(data['paymentMethodId'], 'String');
            }
            if (data.hasOwnProperty('cartOrderItems')) {
                obj['cartOrderItems'] = ApiClient.convertToType(data['cartOrderItems'], [CartOrderItem]);
            }
        }
        return obj;
    }

    /**
    * ID for MySchoolBucks store that the order was recorded with
    * @member {String} clientId
    */
    'clientId' = undefined;
    /**
    * Identifier of the order object
    * @member {String} orderId
    */
    'orderId' = undefined;
    /**
    * Date the order was created
    * @member {Date} date
    */
    'date' = undefined;
    /**
    * @member {module:model/OrderStatus} status
    */
    'status' = undefined;
    /**
    * Customer name tied to the order by the user account or input from a guest checkout
    * @member {String} recipientName
    */
    'recipientName' = undefined;
    /**
    * Customer email tied to the order by the user account or input from a guest checkout
    * @member {String} recipientEmail
    */
    'recipientEmail' = undefined;
    /**
    * Short string reference for the type of account and last 4 of account number submitted to pay order
    * @member {String} billingAcctDesc
    */
    'billingAcctDesc' = undefined;
    /**
    * TODO - get description
    * @member {Object} tag
    */
    'tag' = undefined;
    /**
    * ID for MySchoolBucks store that the order has been recorded to
    * @member {String} storeId
    */
    'storeId' = undefined;
    /**
    * ID for the MySchoolBucks payment method configuration that this order has processed through
    * @member {String} paymentMethodId
    */
    'paymentMethodId' = undefined;
    /**
    * Orders associated with this cart - MySchoolBucks may break a cart into multiple orders based on gateway and store settings
    * @member {Array.<module:model/CartOrderItem>} cartOrderItems
    */
    'cartOrderItems' = undefined;




}
